Springboot启动流程

1   org.springframework.boot.SpringApplication#run()
2       --->org.springframework.boot.SpringApplication#SpringApplication()
                --->org.springframework.boot.WebApplicationType#deduceFromClasspath()
                --->org.springframework.boot.SpringApplication#getSpringFactoriesInstances()
                --->org.springframework.boot.SpringApplication#deduceMainApplicationClass()
3           --->org.springframework.boot.SpringApplication#run(String... args)
                --->org.springframework.boot.SpringApplication.Startup#create()
                --->org.springframework.boot.SpringApplication#createBootstrapContext()
                --->org.springframework.boot.SpringApplication#configureHeadlessProperty()
                --->org.springframework.boot.SpringApplication#getRunListeners()
                --->org.springframework.boot.DefaultApplicationArguments#DefaultApplicationArguments(String... args)
                --->org.springframework.boot.SpringApplication#prepareEnvironment()
                --->org.springframework.boot.SpringApplication#printBanner()
                --->org.springframework.boot.SpringApplication#createApplicationContext()
                --->org.springframework.boot.SpringApplication#prepareContext()
                --->org.springframework.boot.SpringApplication#refreshContext()
                --->org.springframework.boot.SpringApplication#afterRefresh()


2   创建一个SpringApplication的对象实例。在创建实例时，进行了一些基本的初始化操作。大体如下
    2.1 根据classpath的类推断ApplicationContext类型，设置为webApplicationType
    2.2 加载所有的BootstrapRegistryInitializer
    2.3 加载所有的ApplicationContextInitializer
    2.4 加载所有的ApplicationListener
    2.5 根据入参，设置启动类的类信息webApplicationType
3   初始化完成后,执行run()方法。
    3.1 开启计时器
    3.2 创建DefaultBootstrapContext
    3.3 将java.awt.headless设置为true
    3.4 获取并启用监听器
    3.5 置应用程序参数
    3.6 准备环境变量
    3.7 打印Banner
    3.8 创建应用上下文
    3.9 准备应用上下文环境
    3.10    刷新上下文


