Springboot启动流程

参考项目：rookie-springboot-lifecycle

参考图片：./pic/01_boot_lifecycle.webp




1   运行SpringApplication.run()方法
    可以肯定的是，所有的标准的springboot的应用程序都是从run方法开始的。进入run方法后，会 new 一个SpringApplication 对象，创建这个对象的构造函数做了一些准备工作，编号第2~5步就是构造函数里面所做的事情

2   确定应用程序类型
    在SpringApplication的构造方法内，首先会通过 WebApplicationType.deduceFromClasspath()； 方法判断当前应用程序的容器，默认使用的是Servlet 容器，除了servlet之外，还有NONE 和 REACTIVE （响应式编程）；



文章来源：
https://blog.csdn.net/yztezhl/article/details/134508289

https://juejin.cn/column/7323793129709387816






1   org.springframework.boot.SpringApplication#run()
2       --->org.springframework.boot.SpringApplication#SpringApplication()
                --->org.springframework.boot.WebApplicationType#deduceFromClasspath()
                --->org.springframework.boot.SpringApplication#getSpringFactoriesInstances()
                --->org.springframework.boot.SpringApplication#deduceMainApplicationClass()
3           --->org.springframework.boot.SpringApplication#run(String... args)
                --->org.springframework.boot.SpringApplication.Startup#create()
                --->org.springframework.boot.SpringApplication#createBootstrapContext()
                --->org.springframework.boot.SpringApplication#configureHeadlessProperty()
                --->org.springframework.boot.SpringApplication#getRunListeners()
                --->org.springframework.boot.DefaultApplicationArguments#DefaultApplicationArguments(String... args)
                --->org.springframework.boot.SpringApplication#prepareEnvironment()
                --->org.springframework.boot.SpringApplication#printBanner()
                --->org.springframework.boot.SpringApplication#createApplicationContext()
                --->org.springframework.boot.SpringApplication#prepareContext()
                --->org.springframework.boot.SpringApplication#refreshContext()
                --->org.springframework.boot.SpringApplication#afterRefresh()


2   创建一个SpringApplication的对象实例。在创建实例时，进行了一些基本的初始化操作。大体如下
    2.1 根据classpath的类推断ApplicationContext类型，设置为webApplicationType
    2.2 加载所有的BootstrapRegistryInitializer
    2.3 加载所有的ApplicationContextInitializer
    2.4 加载所有的ApplicationListener
    2.5 根据入参，设置启动类的类信息webApplicationType
3   初始化完成后,执行run()方法。
    3.1 开启计时器
    3.2 创建DefaultBootstrapContext
    3.3 将java.awt.headless设置为true
    3.4 获取并启用监听器
    3.5 置应用程序参数
    3.6 准备环境变量
    3.7 打印Banner
    3.8 创建应用上下文
    3.9 准备应用上下文环境
    3.10    刷新上下文


